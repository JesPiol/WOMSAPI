//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace COCAAPI.CocaHandshake {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CocaHandshake_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake")]
    public partial class CocaHandshake : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InsertIntoPRSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateIntoPRSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertIntoCOCAInvoicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateIntoInvoiceChecksOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCOCADetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConnectionStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckVendorDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertIntoEContractsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExposeNAVPOOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExposeNAVPOCOCAOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPRForCOCAOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPOForCOCAOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPIForCOCAOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CocaHandshake() {
            this.Url = global::COCAAPI.Properties.Settings.Default.COCAAPI_CocaHandshake_CocaHandshake;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InsertIntoPRSummaryCompletedEventHandler InsertIntoPRSummaryCompleted;
        
        /// <remarks/>
        public event UpdateIntoPRSummaryCompletedEventHandler UpdateIntoPRSummaryCompleted;
        
        /// <remarks/>
        public event InsertIntoCOCAInvoicesCompletedEventHandler InsertIntoCOCAInvoicesCompleted;
        
        /// <remarks/>
        public event UpdateIntoInvoiceChecksCompletedEventHandler UpdateIntoInvoiceChecksCompleted;
        
        /// <remarks/>
        public event CheckCOCADetailsCompletedEventHandler CheckCOCADetailsCompleted;
        
        /// <remarks/>
        public event GetConnectionStringCompletedEventHandler GetConnectionStringCompleted;
        
        /// <remarks/>
        public event CheckVendorDetailsCompletedEventHandler CheckVendorDetailsCompleted;
        
        /// <remarks/>
        public event InsertIntoEContractsCompletedEventHandler InsertIntoEContractsCompleted;
        
        /// <remarks/>
        public event ExposeNAVPOCompletedEventHandler ExposeNAVPOCompleted;
        
        /// <remarks/>
        public event ExposeNAVPOCOCACompletedEventHandler ExposeNAVPOCOCACompleted;
        
        /// <remarks/>
        public event GetPRForCOCACompletedEventHandler GetPRForCOCACompleted;
        
        /// <remarks/>
        public event GetPOForCOCACompletedEventHandler GetPOForCOCACompleted;
        
        /// <remarks/>
        public event GetPIForCOCACompletedEventHandler GetPIForCOCACompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CocaHandshake:InsertIntoPRSummary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", ResponseElementName="InsertIntoPRSummary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertIntoPRSummary(string pRNo, string pRDate, string department, string pRReceivedDate, string pRReleasedDate, string plantNo, string intendedFor, string phaseOfWork, string workDescription, string status, int company, string purchaser, string bCode, string bControlNo, string priority) {
            this.Invoke("InsertIntoPRSummary", new object[] {
                        pRNo,
                        pRDate,
                        department,
                        pRReceivedDate,
                        pRReleasedDate,
                        plantNo,
                        intendedFor,
                        phaseOfWork,
                        workDescription,
                        status,
                        company,
                        purchaser,
                        bCode,
                        bControlNo,
                        priority});
        }
        
        /// <remarks/>
        public void InsertIntoPRSummaryAsync(string pRNo, string pRDate, string department, string pRReceivedDate, string pRReleasedDate, string plantNo, string intendedFor, string phaseOfWork, string workDescription, string status, int company, string purchaser, string bCode, string bControlNo, string priority) {
            this.InsertIntoPRSummaryAsync(pRNo, pRDate, department, pRReceivedDate, pRReleasedDate, plantNo, intendedFor, phaseOfWork, workDescription, status, company, purchaser, bCode, bControlNo, priority, null);
        }
        
        /// <remarks/>
        public void InsertIntoPRSummaryAsync(
                    string pRNo, 
                    string pRDate, 
                    string department, 
                    string pRReceivedDate, 
                    string pRReleasedDate, 
                    string plantNo, 
                    string intendedFor, 
                    string phaseOfWork, 
                    string workDescription, 
                    string status, 
                    int company, 
                    string purchaser, 
                    string bCode, 
                    string bControlNo, 
                    string priority, 
                    object userState) {
            if ((this.InsertIntoPRSummaryOperationCompleted == null)) {
                this.InsertIntoPRSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertIntoPRSummaryOperationCompleted);
            }
            this.InvokeAsync("InsertIntoPRSummary", new object[] {
                        pRNo,
                        pRDate,
                        department,
                        pRReceivedDate,
                        pRReleasedDate,
                        plantNo,
                        intendedFor,
                        phaseOfWork,
                        workDescription,
                        status,
                        company,
                        purchaser,
                        bCode,
                        bControlNo,
                        priority}, this.InsertIntoPRSummaryOperationCompleted, userState);
        }
        
        private void OnInsertIntoPRSummaryOperationCompleted(object arg) {
            if ((this.InsertIntoPRSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertIntoPRSummaryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CocaHandshake:UpdateIntoPRSummary", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", ResponseElementName="UpdateIntoPRSummary_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateIntoPRSummary(string documentNo, string documentDate, string vendor, string pRNo, string purchaser, decimal amount, string payType, string promiseDate, string eReceiptDate) {
            this.Invoke("UpdateIntoPRSummary", new object[] {
                        documentNo,
                        documentDate,
                        vendor,
                        pRNo,
                        purchaser,
                        amount,
                        payType,
                        promiseDate,
                        eReceiptDate});
        }
        
        /// <remarks/>
        public void UpdateIntoPRSummaryAsync(string documentNo, string documentDate, string vendor, string pRNo, string purchaser, decimal amount, string payType, string promiseDate, string eReceiptDate) {
            this.UpdateIntoPRSummaryAsync(documentNo, documentDate, vendor, pRNo, purchaser, amount, payType, promiseDate, eReceiptDate, null);
        }
        
        /// <remarks/>
        public void UpdateIntoPRSummaryAsync(string documentNo, string documentDate, string vendor, string pRNo, string purchaser, decimal amount, string payType, string promiseDate, string eReceiptDate, object userState) {
            if ((this.UpdateIntoPRSummaryOperationCompleted == null)) {
                this.UpdateIntoPRSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateIntoPRSummaryOperationCompleted);
            }
            this.InvokeAsync("UpdateIntoPRSummary", new object[] {
                        documentNo,
                        documentDate,
                        vendor,
                        pRNo,
                        purchaser,
                        amount,
                        payType,
                        promiseDate,
                        eReceiptDate}, this.UpdateIntoPRSummaryOperationCompleted, userState);
        }
        
        private void OnUpdateIntoPRSummaryOperationCompleted(object arg) {
            if ((this.UpdateIntoPRSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateIntoPRSummaryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CocaHandshake:InsertIntoCOCAInvoices", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", ResponseElementName="InsertIntoCOCAInvoices_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertIntoCOCAInvoices(string pPINNo, string vINo, string terms, string dueDate, string particulars, decimal amount, string postingDate, decimal percent, string pONo, string pPINDate, int company) {
            this.Invoke("InsertIntoCOCAInvoices", new object[] {
                        pPINNo,
                        vINo,
                        terms,
                        dueDate,
                        particulars,
                        amount,
                        postingDate,
                        percent,
                        pONo,
                        pPINDate,
                        company});
        }
        
        /// <remarks/>
        public void InsertIntoCOCAInvoicesAsync(string pPINNo, string vINo, string terms, string dueDate, string particulars, decimal amount, string postingDate, decimal percent, string pONo, string pPINDate, int company) {
            this.InsertIntoCOCAInvoicesAsync(pPINNo, vINo, terms, dueDate, particulars, amount, postingDate, percent, pONo, pPINDate, company, null);
        }
        
        /// <remarks/>
        public void InsertIntoCOCAInvoicesAsync(string pPINNo, string vINo, string terms, string dueDate, string particulars, decimal amount, string postingDate, decimal percent, string pONo, string pPINDate, int company, object userState) {
            if ((this.InsertIntoCOCAInvoicesOperationCompleted == null)) {
                this.InsertIntoCOCAInvoicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertIntoCOCAInvoicesOperationCompleted);
            }
            this.InvokeAsync("InsertIntoCOCAInvoices", new object[] {
                        pPINNo,
                        vINo,
                        terms,
                        dueDate,
                        particulars,
                        amount,
                        postingDate,
                        percent,
                        pONo,
                        pPINDate,
                        company}, this.InsertIntoCOCAInvoicesOperationCompleted, userState);
        }
        
        private void OnInsertIntoCOCAInvoicesOperationCompleted(object arg) {
            if ((this.InsertIntoCOCAInvoicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertIntoCOCAInvoicesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CocaHandshake:UpdateIntoInvoiceChecks", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", ResponseElementName="UpdateIntoInvoiceChecks_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateIntoInvoiceChecks(string checkNo, string checkDate, string aPVNo) {
            this.Invoke("UpdateIntoInvoiceChecks", new object[] {
                        checkNo,
                        checkDate,
                        aPVNo});
        }
        
        /// <remarks/>
        public void UpdateIntoInvoiceChecksAsync(string checkNo, string checkDate, string aPVNo) {
            this.UpdateIntoInvoiceChecksAsync(checkNo, checkDate, aPVNo, null);
        }
        
        /// <remarks/>
        public void UpdateIntoInvoiceChecksAsync(string checkNo, string checkDate, string aPVNo, object userState) {
            if ((this.UpdateIntoInvoiceChecksOperationCompleted == null)) {
                this.UpdateIntoInvoiceChecksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateIntoInvoiceChecksOperationCompleted);
            }
            this.InvokeAsync("UpdateIntoInvoiceChecks", new object[] {
                        checkNo,
                        checkDate,
                        aPVNo}, this.UpdateIntoInvoiceChecksOperationCompleted, userState);
        }
        
        private void OnUpdateIntoInvoiceChecksOperationCompleted(object arg) {
            if ((this.UpdateIntoInvoiceChecksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateIntoInvoiceChecksCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CocaHandshake:CheckCOCADetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", ResponseElementName="CheckCOCADetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckCOCADetails(string documentNo, string pRNo) {
            this.Invoke("CheckCOCADetails", new object[] {
                        documentNo,
                        pRNo});
        }
        
        /// <remarks/>
        public void CheckCOCADetailsAsync(string documentNo, string pRNo) {
            this.CheckCOCADetailsAsync(documentNo, pRNo, null);
        }
        
        /// <remarks/>
        public void CheckCOCADetailsAsync(string documentNo, string pRNo, object userState) {
            if ((this.CheckCOCADetailsOperationCompleted == null)) {
                this.CheckCOCADetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCOCADetailsOperationCompleted);
            }
            this.InvokeAsync("CheckCOCADetails", new object[] {
                        documentNo,
                        pRNo}, this.CheckCOCADetailsOperationCompleted, userState);
        }
        
        private void OnCheckCOCADetailsOperationCompleted(object arg) {
            if ((this.CheckCOCADetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCOCADetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CocaHandshake:GetConnectionString", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", ResponseElementName="GetConnectionString_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetConnectionString(string serverName, string databaseName, string userID, string password) {
            object[] results = this.Invoke("GetConnectionString", new object[] {
                        serverName,
                        databaseName,
                        userID,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetConnectionStringAsync(string serverName, string databaseName, string userID, string password) {
            this.GetConnectionStringAsync(serverName, databaseName, userID, password, null);
        }
        
        /// <remarks/>
        public void GetConnectionStringAsync(string serverName, string databaseName, string userID, string password, object userState) {
            if ((this.GetConnectionStringOperationCompleted == null)) {
                this.GetConnectionStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConnectionStringOperationCompleted);
            }
            this.InvokeAsync("GetConnectionString", new object[] {
                        serverName,
                        databaseName,
                        userID,
                        password}, this.GetConnectionStringOperationCompleted, userState);
        }
        
        private void OnGetConnectionStringOperationCompleted(object arg) {
            if ((this.GetConnectionStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConnectionStringCompleted(this, new GetConnectionStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CocaHandshake:CheckVendorDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", ResponseElementName="CheckVendorDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckVendorDetails(string contractNo, string vendorNo, string pONo) {
            this.Invoke("CheckVendorDetails", new object[] {
                        contractNo,
                        vendorNo,
                        pONo});
        }
        
        /// <remarks/>
        public void CheckVendorDetailsAsync(string contractNo, string vendorNo, string pONo) {
            this.CheckVendorDetailsAsync(contractNo, vendorNo, pONo, null);
        }
        
        /// <remarks/>
        public void CheckVendorDetailsAsync(string contractNo, string vendorNo, string pONo, object userState) {
            if ((this.CheckVendorDetailsOperationCompleted == null)) {
                this.CheckVendorDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckVendorDetailsOperationCompleted);
            }
            this.InvokeAsync("CheckVendorDetails", new object[] {
                        contractNo,
                        vendorNo,
                        pONo}, this.CheckVendorDetailsOperationCompleted, userState);
        }
        
        private void OnCheckVendorDetailsOperationCompleted(object arg) {
            if ((this.CheckVendorDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckVendorDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CocaHandshake:InsertIntoEContracts", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", ResponseElementName="InsertIntoEContracts_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertIntoEContracts(string pONo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime pODate, string pRNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime pRDate, string vendor, decimal amount, string purchaser, string plant, int company) {
            this.Invoke("InsertIntoEContracts", new object[] {
                        pONo,
                        pODate,
                        pRNo,
                        pRDate,
                        vendor,
                        amount,
                        purchaser,
                        plant,
                        company});
        }
        
        /// <remarks/>
        public void InsertIntoEContractsAsync(string pONo, System.DateTime pODate, string pRNo, System.DateTime pRDate, string vendor, decimal amount, string purchaser, string plant, int company) {
            this.InsertIntoEContractsAsync(pONo, pODate, pRNo, pRDate, vendor, amount, purchaser, plant, company, null);
        }
        
        /// <remarks/>
        public void InsertIntoEContractsAsync(string pONo, System.DateTime pODate, string pRNo, System.DateTime pRDate, string vendor, decimal amount, string purchaser, string plant, int company, object userState) {
            if ((this.InsertIntoEContractsOperationCompleted == null)) {
                this.InsertIntoEContractsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertIntoEContractsOperationCompleted);
            }
            this.InvokeAsync("InsertIntoEContracts", new object[] {
                        pONo,
                        pODate,
                        pRNo,
                        pRDate,
                        vendor,
                        amount,
                        purchaser,
                        plant,
                        company}, this.InsertIntoEContractsOperationCompleted, userState);
        }
        
        private void OnInsertIntoEContractsOperationCompleted(object arg) {
            if ((this.InsertIntoEContractsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertIntoEContractsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CocaHandshake:ExposeNAVPO", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", ResponseElementName="ExposeNAVPO_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExposeNAVPO(ref ExportNAVPOIntoEContracts xML, string pONo, int selectedCompany) {
            object[] results = this.Invoke("ExposeNAVPO", new object[] {
                        xML,
                        pONo,
                        selectedCompany});
            xML = ((ExportNAVPOIntoEContracts)(results[0]));
        }
        
        /// <remarks/>
        public void ExposeNAVPOAsync(ExportNAVPOIntoEContracts xML, string pONo, int selectedCompany) {
            this.ExposeNAVPOAsync(xML, pONo, selectedCompany, null);
        }
        
        /// <remarks/>
        public void ExposeNAVPOAsync(ExportNAVPOIntoEContracts xML, string pONo, int selectedCompany, object userState) {
            if ((this.ExposeNAVPOOperationCompleted == null)) {
                this.ExposeNAVPOOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExposeNAVPOOperationCompleted);
            }
            this.InvokeAsync("ExposeNAVPO", new object[] {
                        xML,
                        pONo,
                        selectedCompany}, this.ExposeNAVPOOperationCompleted, userState);
        }
        
        private void OnExposeNAVPOOperationCompleted(object arg) {
            if ((this.ExposeNAVPOCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExposeNAVPOCompleted(this, new ExposeNAVPOCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CocaHandshake:ExposeNAVPOCOCA", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", ResponseElementName="ExposeNAVPOCOCA_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExposeNAVPOCOCA(ref ImportPayroll xML, string pONo, int selectedCompany, string transType) {
            object[] results = this.Invoke("ExposeNAVPOCOCA", new object[] {
                        xML,
                        pONo,
                        selectedCompany,
                        transType});
            xML = ((ImportPayroll)(results[0]));
        }
        
        /// <remarks/>
        public void ExposeNAVPOCOCAAsync(ImportPayroll xML, string pONo, int selectedCompany, string transType) {
            this.ExposeNAVPOCOCAAsync(xML, pONo, selectedCompany, transType, null);
        }
        
        /// <remarks/>
        public void ExposeNAVPOCOCAAsync(ImportPayroll xML, string pONo, int selectedCompany, string transType, object userState) {
            if ((this.ExposeNAVPOCOCAOperationCompleted == null)) {
                this.ExposeNAVPOCOCAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExposeNAVPOCOCAOperationCompleted);
            }
            this.InvokeAsync("ExposeNAVPOCOCA", new object[] {
                        xML,
                        pONo,
                        selectedCompany,
                        transType}, this.ExposeNAVPOCOCAOperationCompleted, userState);
        }
        
        private void OnExposeNAVPOCOCAOperationCompleted(object arg) {
            if ((this.ExposeNAVPOCOCACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExposeNAVPOCOCACompleted(this, new ExposeNAVPOCOCACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CocaHandshake:GetPRForCOCA", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", ResponseElementName="GetPRForCOCA_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetPRForCOCA(ref XMLPortForCOCAPRHeader xMLCOCAPRHeader) {
            object[] results = this.Invoke("GetPRForCOCA", new object[] {
                        xMLCOCAPRHeader});
            xMLCOCAPRHeader = ((XMLPortForCOCAPRHeader)(results[0]));
        }
        
        /// <remarks/>
        public void GetPRForCOCAAsync(XMLPortForCOCAPRHeader xMLCOCAPRHeader) {
            this.GetPRForCOCAAsync(xMLCOCAPRHeader, null);
        }
        
        /// <remarks/>
        public void GetPRForCOCAAsync(XMLPortForCOCAPRHeader xMLCOCAPRHeader, object userState) {
            if ((this.GetPRForCOCAOperationCompleted == null)) {
                this.GetPRForCOCAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPRForCOCAOperationCompleted);
            }
            this.InvokeAsync("GetPRForCOCA", new object[] {
                        xMLCOCAPRHeader}, this.GetPRForCOCAOperationCompleted, userState);
        }
        
        private void OnGetPRForCOCAOperationCompleted(object arg) {
            if ((this.GetPRForCOCACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPRForCOCACompleted(this, new GetPRForCOCACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CocaHandshake:GetPOForCOCA", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", ResponseElementName="GetPOForCOCA_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetPOForCOCA(ref XMLPortForCOCAPOHeader xMLCOCAPOHeader) {
            object[] results = this.Invoke("GetPOForCOCA", new object[] {
                        xMLCOCAPOHeader});
            xMLCOCAPOHeader = ((XMLPortForCOCAPOHeader)(results[0]));
        }
        
        /// <remarks/>
        public void GetPOForCOCAAsync(XMLPortForCOCAPOHeader xMLCOCAPOHeader) {
            this.GetPOForCOCAAsync(xMLCOCAPOHeader, null);
        }
        
        /// <remarks/>
        public void GetPOForCOCAAsync(XMLPortForCOCAPOHeader xMLCOCAPOHeader, object userState) {
            if ((this.GetPOForCOCAOperationCompleted == null)) {
                this.GetPOForCOCAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPOForCOCAOperationCompleted);
            }
            this.InvokeAsync("GetPOForCOCA", new object[] {
                        xMLCOCAPOHeader}, this.GetPOForCOCAOperationCompleted, userState);
        }
        
        private void OnGetPOForCOCAOperationCompleted(object arg) {
            if ((this.GetPOForCOCACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPOForCOCACompleted(this, new GetPOForCOCACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CocaHandshake:GetPIForCOCA", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", ResponseElementName="GetPIForCOCA_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CocaHandshake", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetPIForCOCA(ref XMLPortForCOCAPIHeader xMLCOCAPIHeader) {
            object[] results = this.Invoke("GetPIForCOCA", new object[] {
                        xMLCOCAPIHeader});
            xMLCOCAPIHeader = ((XMLPortForCOCAPIHeader)(results[0]));
        }
        
        /// <remarks/>
        public void GetPIForCOCAAsync(XMLPortForCOCAPIHeader xMLCOCAPIHeader) {
            this.GetPIForCOCAAsync(xMLCOCAPIHeader, null);
        }
        
        /// <remarks/>
        public void GetPIForCOCAAsync(XMLPortForCOCAPIHeader xMLCOCAPIHeader, object userState) {
            if ((this.GetPIForCOCAOperationCompleted == null)) {
                this.GetPIForCOCAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPIForCOCAOperationCompleted);
            }
            this.InvokeAsync("GetPIForCOCA", new object[] {
                        xMLCOCAPIHeader}, this.GetPIForCOCAOperationCompleted, userState);
        }
        
        private void OnGetPIForCOCAOperationCompleted(object arg) {
            if ((this.GetPIForCOCACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPIForCOCACompleted(this, new GetPIForCOCACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50001")]
    public partial class ExportNAVPOIntoEContracts {
        
        private PurchaseHeader[] purchaseHeaderField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PurchaseHeader")]
        public PurchaseHeader[] PurchaseHeader {
            get {
                return this.purchaseHeaderField;
            }
            set {
                this.purchaseHeaderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50001")]
    public partial class PurchaseHeader {
        
        private string pONoField;
        
        private string orderDateField;
        
        private string pRNoField;
        
        private string requisitionDateField;
        
        private string vendorNoField;
        
        private string vendorNameField;
        
        private string amountVATField;
        
        private string purchaserCodeField;
        
        private string plantNoField;
        
        private string[] companyNameField;
        
        private string statusField;
        
        /// <remarks/>
        public string PONo {
            get {
                return this.pONoField;
            }
            set {
                this.pONoField = value;
            }
        }
        
        /// <remarks/>
        public string OrderDate {
            get {
                return this.orderDateField;
            }
            set {
                this.orderDateField = value;
            }
        }
        
        /// <remarks/>
        public string PRNo {
            get {
                return this.pRNoField;
            }
            set {
                this.pRNoField = value;
            }
        }
        
        /// <remarks/>
        public string RequisitionDate {
            get {
                return this.requisitionDateField;
            }
            set {
                this.requisitionDateField = value;
            }
        }
        
        /// <remarks/>
        public string VendorNo {
            get {
                return this.vendorNoField;
            }
            set {
                this.vendorNoField = value;
            }
        }
        
        /// <remarks/>
        public string VendorName {
            get {
                return this.vendorNameField;
            }
            set {
                this.vendorNameField = value;
            }
        }
        
        /// <remarks/>
        public string AmountVAT {
            get {
                return this.amountVATField;
            }
            set {
                this.amountVATField = value;
            }
        }
        
        /// <remarks/>
        public string PurchaserCode {
            get {
                return this.purchaserCodeField;
            }
            set {
                this.purchaserCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PlantNo {
            get {
                return this.plantNoField;
            }
            set {
                this.plantNoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CompanyName")]
        public string[] CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50109")]
    public partial class CheckLedgerEntry {
        
        private string checkDateField;
        
        private string entryStatusField;
        
        private string amountField;
        
        private string checkNoField;
        
        /// <remarks/>
        public string CheckDate {
            get {
                return this.checkDateField;
            }
            set {
                this.checkDateField = value;
            }
        }
        
        /// <remarks/>
        public string EntryStatus {
            get {
                return this.entryStatusField;
            }
            set {
                this.entryStatusField = value;
            }
        }
        
        /// <remarks/>
        public string Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string CheckNo {
            get {
                return this.checkNoField;
            }
            set {
                this.checkNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50109")]
    public partial class VendorLedgerEntry {
        
        private string documentNoField;
        
        private int closedByEntryNoField;
        
        private string appliesToIdField;
        
        public VendorLedgerEntry() {
            this.closedByEntryNoField = 0;
        }
        
        /// <remarks/>
        public string DocumentNo {
            get {
                return this.documentNoField;
            }
            set {
                this.documentNoField = value;
            }
        }
        
        /// <remarks/>
        public int ClosedByEntryNo {
            get {
                return this.closedByEntryNoField;
            }
            set {
                this.closedByEntryNoField = value;
            }
        }
        
        /// <remarks/>
        public string AppliesToId {
            get {
                return this.appliesToIdField;
            }
            set {
                this.appliesToIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50109")]
    public partial class PIHeader {
        
        private string pPINNoField;
        
        private string invoiceDateField;
        
        private string invoiceAmountField;
        
        private string pONoField;
        
        private string pIPaymentTermCodeField;
        
        private string vendorInvoiceNoField;
        
        private string amountIncludingVATField;
        
        private string postingDateField;
        
        /// <remarks/>
        public string PPINNo {
            get {
                return this.pPINNoField;
            }
            set {
                this.pPINNoField = value;
            }
        }
        
        /// <remarks/>
        public string InvoiceDate {
            get {
                return this.invoiceDateField;
            }
            set {
                this.invoiceDateField = value;
            }
        }
        
        /// <remarks/>
        public string InvoiceAmount {
            get {
                return this.invoiceAmountField;
            }
            set {
                this.invoiceAmountField = value;
            }
        }
        
        /// <remarks/>
        public string PONo {
            get {
                return this.pONoField;
            }
            set {
                this.pONoField = value;
            }
        }
        
        /// <remarks/>
        public string PIPaymentTermCode {
            get {
                return this.pIPaymentTermCodeField;
            }
            set {
                this.pIPaymentTermCodeField = value;
            }
        }
        
        /// <remarks/>
        public string VendorInvoiceNo {
            get {
                return this.vendorInvoiceNoField;
            }
            set {
                this.vendorInvoiceNoField = value;
            }
        }
        
        /// <remarks/>
        public string AmountIncludingVAT {
            get {
                return this.amountIncludingVATField;
            }
            set {
                this.amountIncludingVATField = value;
            }
        }
        
        /// <remarks/>
        public string PostingDate {
            get {
                return this.postingDateField;
            }
            set {
                this.postingDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50109")]
    public partial class XMLPortForCOCAPIHeader {
        
        private PIHeader[] pIHeaderField;
        
        private VendorLedgerEntry[] vendorLedgerEntryField;
        
        private CheckLedgerEntry[] checkLedgerEntryField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PIHeader")]
        public PIHeader[] PIHeader {
            get {
                return this.pIHeaderField;
            }
            set {
                this.pIHeaderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("VendorLedgerEntry")]
        public VendorLedgerEntry[] VendorLedgerEntry {
            get {
                return this.vendorLedgerEntryField;
            }
            set {
                this.vendorLedgerEntryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("CheckLedgerEntry")]
        public CheckLedgerEntry[] CheckLedgerEntry {
            get {
                return this.checkLedgerEntryField;
            }
            set {
                this.checkLedgerEntryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50107")]
    public partial class POLine {
        
        private string no_LineField;
        
        private string pRNo_LineField;
        
        private string descriptionField;
        
        private string description2Field;
        
        private string pONo_LineField;
        
        /// <remarks/>
        public string No_Line {
            get {
                return this.no_LineField;
            }
            set {
                this.no_LineField = value;
            }
        }
        
        /// <remarks/>
        public string PRNo_Line {
            get {
                return this.pRNo_LineField;
            }
            set {
                this.pRNo_LineField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Description2 {
            get {
                return this.description2Field;
            }
            set {
                this.description2Field = value;
            }
        }
        
        /// <remarks/>
        public string PONo_Line {
            get {
                return this.pONo_LineField;
            }
            set {
                this.pONo_LineField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50107")]
    public partial class POHeader {
        
        private string pRNoField;
        
        private string pONoField;
        
        private string dateArchivedField;
        
        private string buyFromVendorNoField;
        
        private string buyFromVendorNameField;
        
        private string pOStatusField;
        
        private string pOTotalLineAmountField;
        
        private string pOBillingTermsField;
        
        private int noOfProgressBillingField;
        
        private int versionNoField;
        
        private string paymentTypeField;
        
        private string plantNoField;
        
        private string pBMilestoneField;
        
        private string pOPaymentTermCodeField;
        
        private string orderDateField;
        
        public POHeader() {
            this.noOfProgressBillingField = 0;
            this.versionNoField = 0;
        }
        
        /// <remarks/>
        public string PRNo {
            get {
                return this.pRNoField;
            }
            set {
                this.pRNoField = value;
            }
        }
        
        /// <remarks/>
        public string PONo {
            get {
                return this.pONoField;
            }
            set {
                this.pONoField = value;
            }
        }
        
        /// <remarks/>
        public string DateArchived {
            get {
                return this.dateArchivedField;
            }
            set {
                this.dateArchivedField = value;
            }
        }
        
        /// <remarks/>
        public string BuyFromVendorNo {
            get {
                return this.buyFromVendorNoField;
            }
            set {
                this.buyFromVendorNoField = value;
            }
        }
        
        /// <remarks/>
        public string BuyFromVendorName {
            get {
                return this.buyFromVendorNameField;
            }
            set {
                this.buyFromVendorNameField = value;
            }
        }
        
        /// <remarks/>
        public string POStatus {
            get {
                return this.pOStatusField;
            }
            set {
                this.pOStatusField = value;
            }
        }
        
        /// <remarks/>
        public string POTotalLineAmount {
            get {
                return this.pOTotalLineAmountField;
            }
            set {
                this.pOTotalLineAmountField = value;
            }
        }
        
        /// <remarks/>
        public string POBillingTerms {
            get {
                return this.pOBillingTermsField;
            }
            set {
                this.pOBillingTermsField = value;
            }
        }
        
        /// <remarks/>
        public int NoOfProgressBilling {
            get {
                return this.noOfProgressBillingField;
            }
            set {
                this.noOfProgressBillingField = value;
            }
        }
        
        /// <remarks/>
        public int VersionNo {
            get {
                return this.versionNoField;
            }
            set {
                this.versionNoField = value;
            }
        }
        
        /// <remarks/>
        public string PaymentType {
            get {
                return this.paymentTypeField;
            }
            set {
                this.paymentTypeField = value;
            }
        }
        
        /// <remarks/>
        public string PlantNo {
            get {
                return this.plantNoField;
            }
            set {
                this.plantNoField = value;
            }
        }
        
        /// <remarks/>
        public string PBMilestone {
            get {
                return this.pBMilestoneField;
            }
            set {
                this.pBMilestoneField = value;
            }
        }
        
        /// <remarks/>
        public string POPaymentTermCode {
            get {
                return this.pOPaymentTermCodeField;
            }
            set {
                this.pOPaymentTermCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderDate {
            get {
                return this.orderDateField;
            }
            set {
                this.orderDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50107")]
    public partial class XMLPortForCOCAPOHeader {
        
        private POHeader[] pOHeaderField;
        
        private POLine[] pOLineField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("POHeader")]
        public POHeader[] POHeader {
            get {
                return this.pOHeaderField;
            }
            set {
                this.pOHeaderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("POLine")]
        public POLine[] POLine {
            get {
                return this.pOLineField;
            }
            set {
                this.pOLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50106")]
    public partial class PRLine {
        
        private string pRNo_LineField;
        
        private string no_LineField;
        
        /// <remarks/>
        public string PRNo_Line {
            get {
                return this.pRNo_LineField;
            }
            set {
                this.pRNo_LineField = value;
            }
        }
        
        /// <remarks/>
        public string No_Line {
            get {
                return this.no_LineField;
            }
            set {
                this.no_LineField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50106")]
    public partial class PRHeader {
        
        private string pRNoField;
        
        private string pRDateField;
        
        private string departmentField;
        
        private string intendedForField;
        
        private string plantNoField;
        
        private string workDescriptionField;
        
        private string purchaserCodeField;
        
        private string purchaserNameField;
        
        private string pRMonitoringStatusField;
        
        private string pRApprovingStatusField;
        
        private string pRStatusField;
        
        private string pRTypeField;
        
        private string outageCodeField;
        
        private string outageCodeDescriptionField;
        
        private string priorityField;
        
        private string plantRelatedField;
        
        private string technicalReportRequiredField;
        
        private string projectLocationField;
        
        private string projectInChargeField;
        
        private string budgetTotalAmountField;
        
        private string pRReleasedDateField;
        
        /// <remarks/>
        public string PRNo {
            get {
                return this.pRNoField;
            }
            set {
                this.pRNoField = value;
            }
        }
        
        /// <remarks/>
        public string PRDate {
            get {
                return this.pRDateField;
            }
            set {
                this.pRDateField = value;
            }
        }
        
        /// <remarks/>
        public string Department {
            get {
                return this.departmentField;
            }
            set {
                this.departmentField = value;
            }
        }
        
        /// <remarks/>
        public string IntendedFor {
            get {
                return this.intendedForField;
            }
            set {
                this.intendedForField = value;
            }
        }
        
        /// <remarks/>
        public string PlantNo {
            get {
                return this.plantNoField;
            }
            set {
                this.plantNoField = value;
            }
        }
        
        /// <remarks/>
        public string WorkDescription {
            get {
                return this.workDescriptionField;
            }
            set {
                this.workDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string PurchaserCode {
            get {
                return this.purchaserCodeField;
            }
            set {
                this.purchaserCodeField = value;
            }
        }
        
        /// <remarks/>
        public string PurchaserName {
            get {
                return this.purchaserNameField;
            }
            set {
                this.purchaserNameField = value;
            }
        }
        
        /// <remarks/>
        public string PRMonitoringStatus {
            get {
                return this.pRMonitoringStatusField;
            }
            set {
                this.pRMonitoringStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PRApprovingStatus {
            get {
                return this.pRApprovingStatusField;
            }
            set {
                this.pRApprovingStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PRStatus {
            get {
                return this.pRStatusField;
            }
            set {
                this.pRStatusField = value;
            }
        }
        
        /// <remarks/>
        public string PRType {
            get {
                return this.pRTypeField;
            }
            set {
                this.pRTypeField = value;
            }
        }
        
        /// <remarks/>
        public string OutageCode {
            get {
                return this.outageCodeField;
            }
            set {
                this.outageCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OutageCodeDescription {
            get {
                return this.outageCodeDescriptionField;
            }
            set {
                this.outageCodeDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public string PlantRelated {
            get {
                return this.plantRelatedField;
            }
            set {
                this.plantRelatedField = value;
            }
        }
        
        /// <remarks/>
        public string TechnicalReportRequired {
            get {
                return this.technicalReportRequiredField;
            }
            set {
                this.technicalReportRequiredField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectLocation {
            get {
                return this.projectLocationField;
            }
            set {
                this.projectLocationField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectInCharge {
            get {
                return this.projectInChargeField;
            }
            set {
                this.projectInChargeField = value;
            }
        }
        
        /// <remarks/>
        public string BudgetTotalAmount {
            get {
                return this.budgetTotalAmountField;
            }
            set {
                this.budgetTotalAmountField = value;
            }
        }
        
        /// <remarks/>
        public string PRReleasedDate {
            get {
                return this.pRReleasedDateField;
            }
            set {
                this.pRReleasedDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50106")]
    public partial class XMLPortForCOCAPRHeader {
        
        private PRHeader[] pRHeaderField;
        
        private PRLine[] pRLineField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PRHeader")]
        public PRHeader[] PRHeader {
            get {
                return this.pRHeaderField;
            }
            set {
                this.pRHeaderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("PRLine")]
        public PRLine[] PRLine {
            get {
                return this.pRLineField;
            }
            set {
                this.pRLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50082")]
    public partial class GenJnLine {
        
        private string templateNameField;
        
        private string batchNameField;
        
        private int lineNoField;
        
        private string postingDateField;
        
        private string docTypeField;
        
        private string docNoField;
        
        private string acctTypeField;
        
        private string acctNoField;
        
        private string particularsField;
        
        private string descField;
        
        private string amountField;
        
        private string balAcctTypeField;
        
        private string balAcctNoField;
        
        private string shortcutDim1Field;
        
        private string shortcutDim2Field;
        
        private string[] vDimVal1Field;
        
        private string[] vDimVal2Field;
        
        private string[] vDimVal3Field;
        
        private string[] vDimVal4Field;
        
        private string[] vDimVal5Field;
        
        private string[] vDimVal6Field;
        
        private string[] vDimVal7Field;
        
        public GenJnLine() {
            this.lineNoField = 0;
        }
        
        /// <remarks/>
        public string TemplateName {
            get {
                return this.templateNameField;
            }
            set {
                this.templateNameField = value;
            }
        }
        
        /// <remarks/>
        public string BatchName {
            get {
                return this.batchNameField;
            }
            set {
                this.batchNameField = value;
            }
        }
        
        /// <remarks/>
        public int LineNo {
            get {
                return this.lineNoField;
            }
            set {
                this.lineNoField = value;
            }
        }
        
        /// <remarks/>
        public string PostingDate {
            get {
                return this.postingDateField;
            }
            set {
                this.postingDateField = value;
            }
        }
        
        /// <remarks/>
        public string DocType {
            get {
                return this.docTypeField;
            }
            set {
                this.docTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DocNo {
            get {
                return this.docNoField;
            }
            set {
                this.docNoField = value;
            }
        }
        
        /// <remarks/>
        public string AcctType {
            get {
                return this.acctTypeField;
            }
            set {
                this.acctTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AcctNo {
            get {
                return this.acctNoField;
            }
            set {
                this.acctNoField = value;
            }
        }
        
        /// <remarks/>
        public string Particulars {
            get {
                return this.particularsField;
            }
            set {
                this.particularsField = value;
            }
        }
        
        /// <remarks/>
        public string Desc {
            get {
                return this.descField;
            }
            set {
                this.descField = value;
            }
        }
        
        /// <remarks/>
        public string Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        public string BalAcctType {
            get {
                return this.balAcctTypeField;
            }
            set {
                this.balAcctTypeField = value;
            }
        }
        
        /// <remarks/>
        public string BalAcctNo {
            get {
                return this.balAcctNoField;
            }
            set {
                this.balAcctNoField = value;
            }
        }
        
        /// <remarks/>
        public string ShortcutDim1 {
            get {
                return this.shortcutDim1Field;
            }
            set {
                this.shortcutDim1Field = value;
            }
        }
        
        /// <remarks/>
        public string ShortcutDim2 {
            get {
                return this.shortcutDim2Field;
            }
            set {
                this.shortcutDim2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vDimVal1")]
        public string[] vDimVal1 {
            get {
                return this.vDimVal1Field;
            }
            set {
                this.vDimVal1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vDimVal2")]
        public string[] vDimVal2 {
            get {
                return this.vDimVal2Field;
            }
            set {
                this.vDimVal2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vDimVal3")]
        public string[] vDimVal3 {
            get {
                return this.vDimVal3Field;
            }
            set {
                this.vDimVal3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vDimVal4")]
        public string[] vDimVal4 {
            get {
                return this.vDimVal4Field;
            }
            set {
                this.vDimVal4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vDimVal5")]
        public string[] vDimVal5 {
            get {
                return this.vDimVal5Field;
            }
            set {
                this.vDimVal5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vDimVal6")]
        public string[] vDimVal6 {
            get {
                return this.vDimVal6Field;
            }
            set {
                this.vDimVal6Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("vDimVal7")]
        public string[] vDimVal7 {
            get {
                return this.vDimVal7Field;
            }
            set {
                this.vDimVal7Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:microsoft-dynamics-nav/xmlports/x50082")]
    public partial class ImportPayroll {
        
        private GenJnLine[] genJnLineField;
        
        private string[] textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("GenJnLine")]
        public GenJnLine[] GenJnLine {
            get {
                return this.genJnLineField;
            }
            set {
                this.genJnLineField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertIntoPRSummaryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateIntoPRSummaryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertIntoCOCAInvoicesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UpdateIntoInvoiceChecksCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckCOCADetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetConnectionStringCompletedEventHandler(object sender, GetConnectionStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConnectionStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConnectionStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CheckVendorDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertIntoEContractsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ExposeNAVPOCompletedEventHandler(object sender, ExposeNAVPOCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExposeNAVPOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExposeNAVPOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExportNAVPOIntoEContracts xML {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExportNAVPOIntoEContracts)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ExposeNAVPOCOCACompletedEventHandler(object sender, ExposeNAVPOCOCACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExposeNAVPOCOCACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExposeNAVPOCOCACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ImportPayroll xML {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ImportPayroll)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPRForCOCACompletedEventHandler(object sender, GetPRForCOCACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPRForCOCACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPRForCOCACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XMLPortForCOCAPRHeader xMLCOCAPRHeader {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XMLPortForCOCAPRHeader)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPOForCOCACompletedEventHandler(object sender, GetPOForCOCACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPOForCOCACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPOForCOCACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XMLPortForCOCAPOHeader xMLCOCAPOHeader {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XMLPortForCOCAPOHeader)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPIForCOCACompletedEventHandler(object sender, GetPIForCOCACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPIForCOCACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPIForCOCACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public XMLPortForCOCAPIHeader xMLCOCAPIHeader {
            get {
                this.RaiseExceptionIfNecessary();
                return ((XMLPortForCOCAPIHeader)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591